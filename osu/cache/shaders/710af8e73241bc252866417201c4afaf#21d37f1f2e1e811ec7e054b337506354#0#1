 0bce33932e27e9922b937e8b7cb95736±Ä{"WasCached":false,"VertexBytes":"","FragmentBytes":"","VertexText":"cbuffer g_GlobalUniforms : register(b0)\n{\n    uint _35_g_BackbufferDraw : packoffset(c0);\n    uint _35_g_IsDepthRangeZeroToOne : packoffset(c0.y);\n    uint _35_g_IsClipSpaceYInverted : packoffset(c0.z);\n    uint _35_g_IsUvOriginTopLeft : packoffset(c0.w);\n    row_major float4x4 _35_g_ProjMatrix : packoffset(c1);\n    row_major float3x3 _35_g_ToMaskingSpace : packoffset(c5);\n    uint _35_g_IsMasking : packoffset(c8);\n    float _35_g_CornerRadius : packoffset(c8.y);\n    float _35_g_CornerExponent : packoffset(c8.z);\n    float4 _35_g_MaskingRect : packoffset(c9);\n    float _35_g_BorderThickness : packoffset(c10);\n    row_major float4x4 _35_g_BorderColour : packoffset(c11);\n    float _35_g_MaskingBlendRange : packoffset(c15);\n    float _35_g_AlphaExponent : packoffset(c15.y);\n    float2 _35_g_EdgeOffset : packoffset(c15.z);\n    uint _35_g_DiscardInner : packoffset(c16);\n    float _35_g_InnerCornerRadius : packoffset(c16.y);\n    int _35_g_WrapModeS : packoffset(c16.z);\n    int _35_g_WrapModeT : packoffset(c16.w);\n};\n\n\nstatic float4 gl_Position;\nstatic float4 v_Colour;\nstatic float4 m_Colour;\nstatic float2 v_TexCoord;\nstatic float2 m_TexCoord;\nstatic float2 m_Position;\n\nstruct SPIRV_Cross_Input\n{\n    float2 m_Position : TEXCOORD0;\n    float4 m_Colour : TEXCOORD1;\n    float2 m_TexCoord : TEXCOORD2;\n};\n\nstruct SPIRV_Cross_Output\n{\n    float4 v_Colour : TEXCOORD0;\n    float2 v_TexCoord : TEXCOORD1;\n    float4 gl_Position : SV_Position;\n};\n\nvoid _internal_real_main()\n{\n    v_Colour = m_Colour;\n    v_TexCoord = m_TexCoord;\n    gl_Position = mul(float4(m_Position, 1.0f, 1.0f), _35_g_ProjMatrix);\n}\n\nvoid vert_main()\n{\n    _internal_real_main();\n    if (_35_g_IsDepthRangeZeroToOne != 0u)\n    {\n        gl_Position.z = (gl_Position.z / 2.0f) + 0.5f;\n    }\n    bool _72 = !(_35_g_BackbufferDraw != 0u);\n    bool _80;\n    if (_72)\n    {\n        _80 = !(_35_g_IsUvOriginTopLeft != 0u);\n    }\n    else\n    {\n        _80 = _72;\n    }\n    bool requiresFramebufferInvert = _80;\n    if ((_35_g_IsClipSpaceYInverted != 0u) || requiresFramebufferInvert)\n    {\n        gl_Position.y = -gl_Position.y;\n    }\n}\n\nSPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)\n{\n    m_Colour = stage_input.m_Colour;\n    m_TexCoord = stage_input.m_TexCoord;\n    m_Position = stage_input.m_Position;\n    vert_main();\n    SPIRV_Cross_Output stage_output;\n    stage_output.gl_Position = gl_Position;\n    stage_output.v_Colour = v_Colour;\n    stage_output.v_TexCoord = v_TexCoord;\n    return stage_output;\n}\n","FragmentText":"cbuffer g_GlobalUniforms : register(b0)\n{\n    uint _21_g_BackbufferDraw : packoffset(c0);\n    uint _21_g_IsDepthRangeZeroToOne : packoffset(c0.y);\n    uint _21_g_IsClipSpaceYInverted : packoffset(c0.z);\n    uint _21_g_IsUvOriginTopLeft : packoffset(c0.w);\n    row_major float4x4 _21_g_ProjMatrix : packoffset(c1);\n    row_major float3x3 _21_g_ToMaskingSpace : packoffset(c5);\n    uint _21_g_IsMasking : packoffset(c8);\n    float _21_g_CornerRadius : packoffset(c8.y);\n    float _21_g_CornerExponent : packoffset(c8.z);\n    float4 _21_g_MaskingRect : packoffset(c9);\n    float _21_g_BorderThickness : packoffset(c10);\n    row_major float4x4 _21_g_BorderColour : packoffset(c11);\n    float _21_g_MaskingBlendRange : packoffset(c15);\n    float _21_g_AlphaExponent : packoffset(c15.y);\n    float2 _21_g_EdgeOffset : packoffset(c15.z);\n    uint _21_g_DiscardInner : packoffset(c16);\n    float _21_g_InnerCornerRadius : packoffset(c16.y);\n    int _21_g_WrapModeS : packoffset(c16.z);\n    int _21_g_WrapModeT : packoffset(c16.w);\n};\n\ncbuffer m_AnimationData : register(b1)\n{\n    float _57_progress : packoffset(c0);\n};\n\nTexture2D<float4> m_Texture : register(t0);\nSamplerState m_Sampler : register(s0);\n\nstatic float2 v_TexCoord;\nstatic float4 o_Colour;\nstatic float4 v_Colour;\n\nstruct SPIRV_Cross_Input\n{\n    float4 v_Colour : TEXCOORD0;\n    float2 v_TexCoord : TEXCOORD1;\n};\n\nstruct SPIRV_Cross_Output\n{\n    float4 o_Colour : SV_Target0;\n};\n\nvoid _internal_real_main()\n{\n    float one = float(int(_21_g_BackbufferDraw != 0u));\n    float4 colour = m_Texture.SampleBias(m_Sampler, v_TexCoord, -0.89999997615814208984375f) * one;\n    float4 _62;\n    if (colour.x < _57_progress)\n    {\n        _62 = float4(v_Colour.xyz, v_Colour.w * colour.w);\n    }\n    else\n    {\n        _62 = 0.0f.xxxx;\n    }\n    o_Colour = _62;\n}\n\nvoid frag_main()\n{\n    _internal_real_main();\n}\n\nSPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)\n{\n    v_TexCoord = stage_input.v_TexCoord;\n    v_Colour = stage_input.v_Colour;\n    frag_main();\n    SPIRV_Cross_Output stage_output;\n    stage_output.o_Colour = o_Colour;\n    return stage_output;\n}\n","Reflection":{"VertexElements":[{"Name":"m_Position","Semantic":2,"Format":1,"Offset":0},{"Name":"m_Colour","Semantic":2,"Format":3,"Offset":0},{"Name":"m_TexCoord","Semantic":2,"Format":1,"Offset":0}],"ResourceLayouts":[{"Elements":[{"Name":"g_GlobalUniforms","Kind":0,"Stages":17,"Options":0}]},{"Elements":[{"Name":"m_Texture","Kind":3,"Stages":16,"Options":0},{"Name":"m_Sampler","Kind":5,"Stages":16,"Options":0}]},{"Elements":[{"Name":"m_AnimationData","Kind":0,"Stages":16,"Options":0}]}]}}