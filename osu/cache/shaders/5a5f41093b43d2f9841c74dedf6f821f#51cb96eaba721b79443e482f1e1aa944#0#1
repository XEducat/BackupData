 832e2cb461c8c6c2ebc53647c6b2b2a0—¯{"WasCached":false,"VertexBytes":"","FragmentBytes":"","VertexText":"cbuffer g_GlobalUniforms : register(b0)\n{\n    uint _21_g_BackbufferDraw : packoffset(c0);\n    uint _21_g_IsDepthRangeZeroToOne : packoffset(c0.y);\n    uint _21_g_IsClipSpaceYInverted : packoffset(c0.z);\n    uint _21_g_IsUvOriginTopLeft : packoffset(c0.w);\n    row_major float4x4 _21_g_ProjMatrix : packoffset(c1);\n    row_major float3x3 _21_g_ToMaskingSpace : packoffset(c5);\n    uint _21_g_IsMasking : packoffset(c8);\n    float _21_g_CornerRadius : packoffset(c8.y);\n    float _21_g_CornerExponent : packoffset(c8.z);\n    float4 _21_g_MaskingRect : packoffset(c9);\n    float _21_g_BorderThickness : packoffset(c10);\n    row_major float4x4 _21_g_BorderColour : packoffset(c11);\n    float _21_g_MaskingBlendRange : packoffset(c15);\n    float _21_g_AlphaExponent : packoffset(c15.y);\n    float2 _21_g_EdgeOffset : packoffset(c15.z);\n    uint _21_g_DiscardInner : packoffset(c16);\n    float _21_g_InnerCornerRadius : packoffset(c16.y);\n    int _21_g_WrapModeS : packoffset(c16.z);\n    int _21_g_WrapModeT : packoffset(c16.w);\n};\n\n\nstatic float4 gl_Position;\nstatic float2 m_Position;\nstatic float2 v_MaskingPosition;\nstatic float4 v_Colour;\nstatic float4 m_Colour;\nstatic float2 v_TexCoord;\nstatic float2 m_TexCoord;\nstatic float4 v_TexRect;\nstatic float4 m_TexRect;\nstatic float2 v_BlendRange;\nstatic float2 m_BlendRange;\nstatic float m_BackbufferDrawDepth;\n\nstruct SPIRV_Cross_Input\n{\n    float2 m_Position : TEXCOORD0;\n    float4 m_Colour : TEXCOORD1;\n    float2 m_TexCoord : TEXCOORD2;\n    float4 m_TexRect : TEXCOORD3;\n    float2 m_BlendRange : TEXCOORD4;\n    float m_BackbufferDrawDepth : TEXCOORD5;\n};\n\nstruct SPIRV_Cross_Output\n{\n    float2 v_MaskingPosition : TEXCOORD0;\n    float4 v_Colour : TEXCOORD1;\n    float2 v_TexCoord : TEXCOORD2;\n    float4 v_TexRect : TEXCOORD3;\n    float2 v_BlendRange : TEXCOORD4;\n    float4 gl_Position : SV_Position;\n};\n\nvoid _internal_real_main()\n{\n    float3 maskingPos = mul(float3(m_Position, 1.0f), _21_g_ToMaskingSpace);\n    v_MaskingPosition = maskingPos.xy / maskingPos.z.xx;\n    v_Colour = m_Colour;\n    v_TexCoord = m_TexCoord;\n    v_TexRect = m_TexRect;\n    v_BlendRange = m_BlendRange;\n    gl_Position = mul(float4(m_Position, 1.0f, 1.0f), _21_g_ProjMatrix);\n    if (_21_g_BackbufferDraw != 0u)\n    {\n        gl_Position.z = m_BackbufferDrawDepth;\n    }\n}\n\nvoid vert_main()\n{\n    _internal_real_main();\n    if (_21_g_IsDepthRangeZeroToOne != 0u)\n    {\n        gl_Position.z = (gl_Position.z / 2.0f) + 0.5f;\n    }\n    bool _106 = !(_21_g_BackbufferDraw != 0u);\n    bool _114;\n    if (_106)\n    {\n        _114 = !(_21_g_IsUvOriginTopLeft != 0u);\n    }\n    else\n    {\n        _114 = _106;\n    }\n    bool requiresFramebufferInvert = _114;\n    if ((_21_g_IsClipSpaceYInverted != 0u) || requiresFramebufferInvert)\n    {\n        gl_Position.y = -gl_Position.y;\n    }\n}\n\nSPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)\n{\n    m_Position = stage_input.m_Position;\n    m_Colour = stage_input.m_Colour;\n    m_TexCoord = stage_input.m_TexCoord;\n    m_TexRect = stage_input.m_TexRect;\n    m_BlendRange = stage_input.m_BlendRange;\n    m_BackbufferDrawDepth = stage_input.m_BackbufferDrawDepth;\n    vert_main();\n    SPIRV_Cross_Output stage_output;\n    stage_output.gl_Position = gl_Position;\n    stage_output.v_MaskingPosition = v_MaskingPosition;\n    stage_output.v_Colour = v_Colour;\n    stage_output.v_TexCoord = v_TexCoord;\n    stage_output.v_TexRect = v_TexRect;\n    stage_output.v_BlendRange = v_BlendRange;\n    return stage_output;\n}\n","FragmentText":"cbuffer g_GlobalUniforms : register(b0)\n{\n    uint _141_g_BackbufferDraw : packoffset(c0);\n    uint _141_g_IsDepthRangeZeroToOne : packoffset(c0.y);\n    uint _141_g_IsClipSpaceYInverted : packoffset(c0.z);\n    uint _141_g_IsUvOriginTopLeft : packoffset(c0.w);\n    row_major float4x4 _141_g_ProjMatrix : packoffset(c1);\n    row_major float3x3 _141_g_ToMaskingSpace : packoffset(c5);\n    uint _141_g_IsMasking : packoffset(c8);\n    float _141_g_CornerRadius : packoffset(c8.y);\n    float _141_g_CornerExponent : packoffset(c8.z);\n    float4 _141_g_MaskingRect : packoffset(c9);\n    float _141_g_BorderThickness : packoffset(c10);\n    row_major float4x4 _141_g_BorderColour : packoffset(c11);\n    float _141_g_MaskingBlendRange : packoffset(c15);\n    float _141_g_AlphaExponent : packoffset(c15.y);\n    float2 _141_g_EdgeOffset : packoffset(c15.z);\n    uint _141_g_DiscardInner : packoffset(c16);\n    float _141_g_InnerCornerRadius : packoffset(c16.y);\n    int _141_g_WrapModeS : packoffset(c16.z);\n    int _141_g_WrapModeT : packoffset(c16.w);\n};\n\ncbuffer m_BlurParameters : register(b1)\n{\n    float2 _165_g_TexSize : packoffset(c0);\n    int _165_g_Radius : packoffset(c0.z);\n    float _165_g_Sigma : packoffset(c0.w);\n    float2 _165_g_BlurDirection : packoffset(c1);\n};\n\nTexture2D<float4> m_Texture : register(t0);\nSamplerState m_Sampler : register(s0);\n\nstatic float4 o_Colour;\nstatic float2 v_TexCoord;\nstatic float2 _unused_output_1;\nstatic float2 _unused_input_0;\nstatic float4 _unused_output_2;\nstatic float4 _unused_input_1;\nstatic float4 _unused_output_3;\nstatic float4 _unused_input_3;\nstatic float2 _unused_output_4;\nstatic float2 _unused_input_4;\n\nstruct SPIRV_Cross_Input\n{\n    float2 _unused_input_0 : TEXCOORD0;\n    float4 _unused_input_1 : TEXCOORD1;\n    float2 v_TexCoord : TEXCOORD2;\n    float4 _unused_input_3 : TEXCOORD3;\n    float2 _unused_input_4 : TEXCOORD4;\n};\n\nstruct SPIRV_Cross_Output\n{\n    float4 o_Colour : SV_Target0;\n    float2 _unused_output_1 : SV_Target1;\n    float4 _unused_output_2 : SV_Target2;\n    float4 _unused_output_3 : SV_Target3;\n    float2 _unused_output_4 : SV_Target4;\n};\n\nfloat computeGauss(float x, float sigma)\n{\n    return (0.3989399969577789306640625f * exp((((-0.5f) * x) * x) / (sigma * sigma))) / sigma;\n}\n\nfloat4 blur(int radius, float2 direction, float2 texCoord, float2 texSize, float sigma)\n{\n    float param = 0.0f;\n    float param_1 = sigma;\n    float factor = computeGauss(param, param_1);\n    float4 sum = m_Texture.Sample(m_Sampler, texCoord) * factor;\n    float totalFactor = factor;\n    for (int i = 2; i <= 200; i += 2)\n    {\n        float x = float(i) - 0.5f;\n        float param_2 = x;\n        float param_3 = sigma;\n        factor = computeGauss(param_2, param_3) * 2.0f;\n        totalFactor += (2.0f * factor);\n        sum += (m_Texture.Sample(m_Sampler, texCoord + ((direction * x) / texSize)) * factor);\n        sum += (m_Texture.Sample(m_Sampler, texCoord - ((direction * x) / texSize)) * factor);\n        if (i >= radius)\n        {\n            break;\n        }\n    }\n    float one = float((_141_g_BackbufferDraw != 0u) ? 0 : 1);\n    float4 _157 = (sum / totalFactor.xxxx) * one;\n    return _157;\n}\n\nvoid _internal_real_main()\n{\n    int param = _165_g_Radius;\n    float2 param_1 = _165_g_BlurDirection;\n    float2 param_2 = v_TexCoord;\n    float2 param_3 = _165_g_TexSize;\n    float param_4 = _165_g_Sigma;\n    o_Colour = blur(param, param_1, param_2, param_3, param_4);\n}\n\nvoid frag_main()\n{\n    _internal_real_main();\n    _unused_output_1 = _unused_input_0;\n    _unused_output_2 = _unused_input_1;\n    _unused_output_3 = _unused_input_3;\n    _unused_output_4 = _unused_input_4;\n}\n\nSPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)\n{\n    v_TexCoord = stage_input.v_TexCoord;\n    _unused_input_0 = stage_input._unused_input_0;\n    _unused_input_1 = stage_input._unused_input_1;\n    _unused_input_3 = stage_input._unused_input_3;\n    _unused_input_4 = stage_input._unused_input_4;\n    frag_main();\n    SPIRV_Cross_Output stage_output;\n    stage_output.o_Colour = o_Colour;\n    stage_output._unused_output_1 = _unused_output_1;\n    stage_output._unused_output_2 = _unused_output_2;\n    stage_output._unused_output_3 = _unused_output_3;\n    stage_output._unused_output_4 = _unused_output_4;\n    return stage_output;\n}\n","Reflection":{"VertexElements":[{"Name":"m_Position","Semantic":2,"Format":1,"Offset":0},{"Name":"m_Colour","Semantic":2,"Format":3,"Offset":0},{"Name":"m_TexCoord","Semantic":2,"Format":1,"Offset":0},{"Name":"m_TexRect","Semantic":2,"Format":3,"Offset":0},{"Name":"m_BlendRange","Semantic":2,"Format":1,"Offset":0},{"Name":"m_BackbufferDrawDepth","Semantic":2,"Format":0,"Offset":0}],"ResourceLayouts":[{"Elements":[{"Name":"g_GlobalUniforms","Kind":0,"Stages":17,"Options":0}]},{"Elements":[{"Name":"m_BlurParameters","Kind":0,"Stages":16,"Options":0}]},{"Elements":[{"Name":"m_Texture","Kind":3,"Stages":16,"Options":0},{"Name":"m_Sampler","Kind":5,"Stages":16,"Options":0}]}]}}