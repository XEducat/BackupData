 b0b0b41681a6923c6288cebd305b85a8дл{"WasCached":false,"VertexBytes":"","FragmentBytes":"","VertexText":"cbuffer g_GlobalUniforms : register(b0)\n{\n    uint _21_g_BackbufferDraw : packoffset(c0);\n    uint _21_g_IsDepthRangeZeroToOne : packoffset(c0.y);\n    uint _21_g_IsClipSpaceYInverted : packoffset(c0.z);\n    uint _21_g_IsUvOriginTopLeft : packoffset(c0.w);\n    row_major float4x4 _21_g_ProjMatrix : packoffset(c1);\n    row_major float3x3 _21_g_ToMaskingSpace : packoffset(c5);\n    uint _21_g_IsMasking : packoffset(c8);\n    float _21_g_CornerRadius : packoffset(c8.y);\n    float _21_g_CornerExponent : packoffset(c8.z);\n    float4 _21_g_MaskingRect : packoffset(c9);\n    float _21_g_BorderThickness : packoffset(c10);\n    row_major float4x4 _21_g_BorderColour : packoffset(c11);\n    float _21_g_MaskingBlendRange : packoffset(c15);\n    float _21_g_AlphaExponent : packoffset(c15.y);\n    float2 _21_g_EdgeOffset : packoffset(c15.z);\n    uint _21_g_DiscardInner : packoffset(c16);\n    float _21_g_InnerCornerRadius : packoffset(c16.y);\n    int _21_g_WrapModeS : packoffset(c16.z);\n    int _21_g_WrapModeT : packoffset(c16.w);\n};\n\n\nstatic float4 gl_Position;\nstatic float3 m_Position;\nstatic float2 v_MaskingPosition;\nstatic float4 v_TexRect;\nstatic float2 v_BlendRange;\nstatic float4 v_Colour;\nstatic float4 m_Colour;\nstatic float2 v_TexCoord;\nstatic float2 m_TexCoord;\n\nstruct SPIRV_Cross_Input\n{\n    float3 m_Position : TEXCOORD0;\n    float4 m_Colour : TEXCOORD1;\n    float2 m_TexCoord : TEXCOORD2;\n};\n\nstruct SPIRV_Cross_Output\n{\n    float2 v_MaskingPosition : TEXCOORD0;\n    float4 v_Colour : TEXCOORD1;\n    float2 v_TexCoord : TEXCOORD2;\n    float4 v_TexRect : TEXCOORD3;\n    float2 v_BlendRange : TEXCOORD4;\n    float4 gl_Position : SV_Position;\n};\n\nvoid _internal_real_main()\n{\n    float3 maskingPos = mul(float3(m_Position.xy, 1.0f), _21_g_ToMaskingSpace);\n    v_MaskingPosition = maskingPos.xy / maskingPos.z.xx;\n    v_TexRect = 0.0f.xxxx;\n    v_BlendRange = 0.0f.xx;\n    v_Colour = m_Colour;\n    v_TexCoord = m_TexCoord;\n    gl_Position = mul(float4(m_Position, 1.0f), _21_g_ProjMatrix);\n}\n\nvoid vert_main()\n{\n    _internal_real_main();\n    if (_21_g_IsDepthRangeZeroToOne != 0u)\n    {\n        gl_Position.z = (gl_Position.z / 2.0f) + 0.5f;\n    }\n    bool _99 = !(_21_g_BackbufferDraw != 0u);\n    bool _107;\n    if (_99)\n    {\n        _107 = !(_21_g_IsUvOriginTopLeft != 0u);\n    }\n    else\n    {\n        _107 = _99;\n    }\n    bool requiresFramebufferInvert = _107;\n    if ((_21_g_IsClipSpaceYInverted != 0u) || requiresFramebufferInvert)\n    {\n        gl_Position.y = -gl_Position.y;\n    }\n}\n\nSPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)\n{\n    m_Position = stage_input.m_Position;\n    m_Colour = stage_input.m_Colour;\n    m_TexCoord = stage_input.m_TexCoord;\n    vert_main();\n    SPIRV_Cross_Output stage_output;\n    stage_output.gl_Position = gl_Position;\n    stage_output.v_MaskingPosition = v_MaskingPosition;\n    stage_output.v_TexRect = v_TexRect;\n    stage_output.v_BlendRange = v_BlendRange;\n    stage_output.v_Colour = v_Colour;\n    stage_output.v_TexCoord = v_TexCoord;\n    return stage_output;\n}\n","FragmentText":"cbuffer g_GlobalUniforms : register(b0)\n{\n    uint _121_g_BackbufferDraw : packoffset(c0);\n    uint _121_g_IsDepthRangeZeroToOne : packoffset(c0.y);\n    uint _121_g_IsClipSpaceYInverted : packoffset(c0.z);\n    uint _121_g_IsUvOriginTopLeft : packoffset(c0.w);\n    row_major float4x4 _121_g_ProjMatrix : packoffset(c1);\n    row_major float3x3 _121_g_ToMaskingSpace : packoffset(c5);\n    uint _121_g_IsMasking : packoffset(c8);\n    float _121_g_CornerRadius : packoffset(c8.y);\n    float _121_g_CornerExponent : packoffset(c8.z);\n    float4 _121_g_MaskingRect : packoffset(c9);\n    float _121_g_BorderThickness : packoffset(c10);\n    row_major float4x4 _121_g_BorderColour : packoffset(c11);\n    float _121_g_MaskingBlendRange : packoffset(c15);\n    float _121_g_AlphaExponent : packoffset(c15.y);\n    float2 _121_g_EdgeOffset : packoffset(c15.z);\n    uint _121_g_DiscardInner : packoffset(c16);\n    float _121_g_InnerCornerRadius : packoffset(c16.y);\n    int _121_g_WrapModeS : packoffset(c16.z);\n    int _121_g_WrapModeT : packoffset(c16.w);\n};\n\nTexture2D<float4> m_Texture : register(t0);\nSamplerState m_Sampler : register(s0);\n\nstatic float2 v_MaskingPosition;\nstatic float4 v_TexRect;\nstatic float2 v_BlendRange;\nstatic float4 v_Colour;\nstatic float2 v_TexCoord;\nstatic float4 o_Colour;\n\nstruct SPIRV_Cross_Input\n{\n    float2 v_MaskingPosition : TEXCOORD0;\n    float4 v_Colour : TEXCOORD1;\n    float2 v_TexCoord : TEXCOORD2;\n    float4 v_TexRect : TEXCOORD3;\n    float2 v_BlendRange : TEXCOORD4;\n};\n\nstruct SPIRV_Cross_Output\n{\n    float4 o_Colour : SV_Target0;\n};\n\nfloat mod(float x, float y)\n{\n    return x - y * floor(x / y);\n}\n\nfloat2 mod(float2 x, float2 y)\n{\n    return x - y * floor(x / y);\n}\n\nfloat3 mod(float3 x, float3 y)\n{\n    return x - y * floor(x / y);\n}\n\nfloat4 mod(float4 x, float4 y)\n{\n    return x - y * floor(x / y);\n}\n\nfloat wrap(float coord, int mode, float rangeMin, float rangeMax)\n{\n    if (mode == 1)\n    {\n        return clamp(coord, rangeMin, rangeMax);\n    }\n    else\n    {\n        if (mode == 3)\n        {\n            return mod(coord - rangeMin, rangeMax - rangeMin) + rangeMin;\n        }\n    }\n    return coord;\n}\n\nfloat2 wrap(float2 texCoord, float4 texRect)\n{\n    float param = texCoord.x;\n    int param_1 = _121_g_WrapModeS;\n    float param_2 = texRect.x;\n    float param_3 = texRect.z;\n    float param_4 = texCoord.y;\n    int param_5 = _121_g_WrapModeT;\n    float param_6 = texRect.y;\n    float param_7 = texRect.w;\n    return float2(wrap(param, param_1, param_2, param_3), wrap(param_4, param_5, param_6, param_7));\n}\n\nfloat4 wrappedSampler(float2 wrappedCoord, float4 texRect, Texture2D<float4> wrapTexture, SamplerState wrapSampler, float lodBias)\n{\n    bool _583 = _121_g_WrapModeS == 2;\n    bool _600;\n    if (_583)\n    {\n        bool _590 = wrappedCoord.x < texRect.x;\n        bool _599;\n        if (!_590)\n        {\n            _599 = wrappedCoord.x > texRect.z;\n        }\n        else\n        {\n            _599 = _590;\n        }\n        _600 = _599;\n    }\n    else\n    {\n        _600 = _583;\n    }\n    bool _624;\n    if (!_600)\n    {\n        bool _606 = _121_g_WrapModeT == 2;\n        bool _623;\n        if (_606)\n        {\n            bool _613 = wrappedCoord.y < texRect.y;\n            bool _622;\n            if (!_613)\n            {\n                _622 = wrappedCoord.y > texRect.w;\n            }\n            else\n            {\n                _622 = _613;\n            }\n            _623 = _622;\n        }\n        else\n        {\n            _623 = _606;\n        }\n        _624 = _623;\n    }\n    else\n    {\n        _624 = _600;\n    }\n    if (_624)\n    {\n        return 0.0f.xxxx;\n    }\n    return wrapTexture.SampleBias(wrapSampler, wrappedCoord, lodBias);\n}\n\nfloat distanceFromRoundedRect(float2 offset, float radius)\n{\n    float2 maskingPosition = v_MaskingPosition + offset;\n    float2 topLeftOffset = _121_g_MaskingRect.xy - maskingPosition;\n    float2 bottomRightOffset = maskingPosition - _121_g_MaskingRect.zw;\n    float2 distanceFromShrunkRect = max(bottomRightOffset + radius.xx, topLeftOffset + radius.xx);\n    float maxDist = max(distanceFromShrunkRect.x, distanceFromShrunkRect.y);\n    if (maxDist <= 0.0f)\n    {\n        return maxDist;\n    }\n    else\n    {\n        distanceFromShrunkRect = max(0.0f.xx, distanceFromShrunkRect);\n        return pow(pow(distanceFromShrunkRect.x, _121_g_CornerExponent) + pow(distanceFromShrunkRect.y, _121_g_CornerExponent), 1.0f / _121_g_CornerExponent);\n    }\n}\n\nfloat distanceFromDrawingRect(float2 texCoord)\n{\n    float2 topLeftOffset = v_TexRect.xy - texCoord;\n    float _194;\n    if (v_BlendRange.x > 0.0f)\n    {\n        _194 = topLeftOffset.x / v_BlendRange.x;\n    }\n    else\n    {\n        _194 = 0.0f;\n    }\n    float _207;\n    if (v_BlendRange.y > 0.0f)\n    {\n        _207 = topLeftOffset.y / v_BlendRange.y;\n    }\n    else\n    {\n        _207 = 0.0f;\n    }\n    topLeftOffset = float2(_194, _207);\n    float2 bottomRightOffset = texCoord - v_TexRect.zw;\n    float _226;\n    if (v_BlendRange.x > 0.0f)\n    {\n        _226 = bottomRightOffset.x / v_BlendRange.x;\n    }\n    else\n    {\n        _226 = 0.0f;\n    }\n    float _239;\n    if (v_BlendRange.y > 0.0f)\n    {\n        _239 = bottomRightOffset.y / v_BlendRange.y;\n    }\n    else\n    {\n        _239 = 0.0f;\n    }\n    bottomRightOffset = float2(_226, _239);\n    float2 xyDistance = max(topLeftOffset, bottomRightOffset);\n    return max(xyDistance.x, xyDistance.y);\n}\n\nfloat4 getBorderColour()\n{\n    float2 relativeTexCoord = v_MaskingPosition / (_121_g_MaskingRect.zw - _121_g_MaskingRect.xy);\n    float4 top = lerp(_121_g_BorderColour[0], _121_g_BorderColour[2], relativeTexCoord.x.xxxx);\n    float4 bottom = lerp(_121_g_BorderColour[1], _121_g_BorderColour[3], relativeTexCoord.x.xxxx);\n    float4 _300 = lerp(top, bottom, relativeTexCoord.y.xxxx);\n    return _300;\n}\n\nfloat4 blend(float4 src, float4 dst)\n{\n    float finalAlpha = src.w + (dst.w * (1.0f - src.w));\n    if (finalAlpha == 0.0f)\n    {\n        return 0.0f.xxxx;\n    }\n    return float4(((src.xyz * src.w) + ((dst.xyz * dst.w) * (1.0f - src.w))) / finalAlpha.xxx, finalAlpha);\n}\n\nfloat4 getRoundedColor(float4 texel, float2 texCoord)\n{\n    bool _309 = !(_121_g_IsMasking != 0u);\n    bool _316;\n    if (_309)\n    {\n        _316 = all(bool2(v_BlendRange.x == 0.0f.xx.x, v_BlendRange.y == 0.0f.xx.y));\n    }\n    else\n    {\n        _316 = _309;\n    }\n    if (_316)\n    {\n        return v_Colour * texel;\n    }\n    float2 param = 0.0f.xx;\n    float param_1 = _121_g_CornerRadius;\n    float dist = distanceFromRoundedRect(param, param_1);\n    float alphaFactor = 1.0f;\n    if (_121_g_DiscardInner != 0u)\n    {\n        bool _344 = all(bool2(_121_g_EdgeOffset.x == 0.0f.xx.x, _121_g_EdgeOffset.y == 0.0f.xx.y));\n        bool _353;\n        if (_344)\n        {\n            _353 = _121_g_InnerCornerRadius == _121_g_CornerRadius;\n        }\n        else\n        {\n            _353 = _344;\n        }\n        float _354;\n        if (_353)\n        {\n            _354 = dist;\n        }\n        else\n        {\n            float2 param_2 = _121_g_EdgeOffset;\n            float param_3 = _121_g_InnerCornerRadius;\n            _354 = distanceFromRoundedRect(param_2, param_3);\n        }\n        float innerDist = _354;\n        float innerBlendFactor = ((_121_g_InnerCornerRadius - _121_g_MaskingBlendRange) - innerDist) / v_BlendRange.x;\n        if (innerBlendFactor > 1.0f)\n        {\n            return 0.0f.xxxx;\n        }\n        alphaFactor = pow(min(1.0f - innerBlendFactor, 1.0f), 1.0f / _121_g_AlphaExponent);\n    }\n    dist /= _121_g_MaskingBlendRange;\n    float _400;\n    if (_121_g_CornerRadius <= 0.0f)\n    {\n        _400 = _121_g_MaskingBlendRange;\n    }\n    else\n    {\n        _400 = max(0.0f, _121_g_MaskingBlendRange - _121_g_CornerRadius);\n    }\n    float radiusCorrection = _400;\n    float fadeStart = (_121_g_CornerRadius + radiusCorrection) / _121_g_MaskingBlendRange;\n    alphaFactor *= min(fadeStart - dist, 1.0f);\n    bool _429 = v_BlendRange.x > 0.0f;\n    bool _436;\n    if (!_429)\n    {\n        _436 = v_BlendRange.y > 0.0f;\n    }\n    else\n    {\n        _436 = _429;\n    }\n    if (_436)\n    {\n        float2 param_4 = texCoord;\n        alphaFactor *= clamp(1.0f - distanceFromDrawingRect(param_4), 0.0f, 1.0f);\n    }\n    if (alphaFactor <= 0.0f)\n    {\n        return 0.0f.xxxx;\n    }\n    alphaFactor = pow(alphaFactor, _121_g_AlphaExponent);\n    float borderStart = (1.0f + fadeStart) - _121_g_BorderThickness;\n    float colourWeight = min(borderStart - dist, 1.0f);\n    float4 contentColour = v_Colour * texel;\n    if (colourWeight == 1.0f)\n    {\n        return float4(contentColour.xyz, contentColour.w * alphaFactor);\n    }\n    float4 borderColour = getBorderColour();\n    if (colourWeight <= 0.0f)\n    {\n        return float4(borderColour.xyz, borderColour.w * alphaFactor);\n    }\n    contentColour.w *= alphaFactor;\n    borderColour.w *= (1.0f - colourWeight);\n    float4 param_5 = borderColour;\n    float4 param_6 = contentColour;\n    return blend(param_5, param_6);\n}\n\nvoid _internal_real_main()\n{\n    float2 param = v_TexCoord;\n    float4 param_1 = v_TexRect;\n    float2 wrappedCoord = wrap(param, param_1);\n    float2 param_2 = wrappedCoord;\n    float4 param_3 = v_TexRect;\n    float param_4 = -0.89999997615814208984375f;\n    float4 param_5 = wrappedSampler(param_2, param_3, m_Texture, m_Sampler, param_4);\n    float2 param_6 = wrappedCoord;\n    o_Colour = getRoundedColor(param_5, param_6);\n}\n\nvoid frag_main()\n{\n    _internal_real_main();\n}\n\nSPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)\n{\n    v_MaskingPosition = stage_input.v_MaskingPosition;\n    v_TexRect = stage_input.v_TexRect;\n    v_BlendRange = stage_input.v_BlendRange;\n    v_Colour = stage_input.v_Colour;\n    v_TexCoord = stage_input.v_TexCoord;\n    frag_main();\n    SPIRV_Cross_Output stage_output;\n    stage_output.o_Colour = o_Colour;\n    return stage_output;\n}\n","Reflection":{"VertexElements":[{"Name":"m_Position","Semantic":2,"Format":2,"Offset":0},{"Name":"m_Colour","Semantic":2,"Format":3,"Offset":0},{"Name":"m_TexCoord","Semantic":2,"Format":1,"Offset":0}],"ResourceLayouts":[{"Elements":[{"Name":"g_GlobalUniforms","Kind":0,"Stages":17,"Options":0}]},{"Elements":[{"Name":"m_Texture","Kind":3,"Stages":16,"Options":0},{"Name":"m_Sampler","Kind":5,"Stages":16,"Options":0}]}]}}